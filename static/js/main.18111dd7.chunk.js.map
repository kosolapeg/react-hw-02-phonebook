{"version":3,"sources":["components/Section/Section.jsx","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Form/Form.module.css"],"names":["Section","title","children","Form","onSubmit","useState","name","number","state","setState","handleChange","e","currentTarget","value","prev","action","preventDefault","className","css","form","label","type","pattern","required","onChange","button","useStyles","createUseStyles","contactsList","width","contactItem","display","justifyContent","marginBottom","marginLeft","border","backgroundColor","cursor","Contacts","records","onDelete","classes","map","id","onClick","filter","marginTop","Filter","App","contacts","setContacts","setFilter","useEffect","storedContacts","localStorage","getItem","parsedContacts","JSON","parse","console","log","setItem","stringify","some","contact","alert","newRecord","shortid","generate","vlaue","filterName","normalizedFilter","toLocaleLowerCase","includes","getVisibleContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.18111dd7.chunk.js","sourcesContent":["const Section = ({ title, children }) => {\r\n  return (\r\n    <>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Section;\r\n","import { useState } from 'react';\r\n\r\nimport css from './Form.module.css';\r\n\r\nconst Form = ({ onSubmit, children }) => {\r\n  const [state, setState] = useState({ name: '', number: '' });\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    setState(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(name, number);\r\n  };\r\n\r\n  const { name, number } = state;\r\n  return (\r\n    <form action=\"\" onSubmit={handleSubmit} className={css.form}>\r\n      <label className={css.label}>\r\n        Name:\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={name}\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label className={css.label}>\r\n        Number:\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={css.button}>\r\n        Add contact\r\n      </button>\r\n\r\n      {children}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  contactsList: { width: 500 },\r\n\r\n  contactItem: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: 240,\r\n    marginBottom: 8,\r\n  },\r\n\r\n  button: {\r\n    marginLeft: 20,\r\n    border: '1px solid black',\r\n    backgroundColor: 'white',\r\n    cursor: 'pointer',\r\n  },\r\n});\r\n\r\nconst Contacts = ({ records, onDelete }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ul className={classes.contactsList}>\r\n      {records.map(({ id, name, number }) => (\r\n        <li key={id} className={classes.contactItem}>\r\n          {name}: {number}\r\n          <button\r\n            type=\"button\"\r\n            className={classes.button}\r\n            onClick={() => onDelete(id)}\r\n          >\r\n            x\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Contacts;\r\n","import { createUseStyles } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles({\r\n  filter: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    marginTop: 24,\r\n  },\r\n});\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <label className={classes.filter}>\r\n        <b>Search by name:</b>\r\n        <input type=\"text\" value={value} onChange={onChange} />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\nexport default Filter;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport Section from './components/Section';\r\nimport Form from './components/Form';\r\nimport Contacts from './components/Contacts';\r\nimport Filter from './components/Filter';\r\nimport shortid from 'shortid';\r\n\r\nconst App = () => {\r\n  const initialContacts = [\r\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n  ];\r\n\r\n  const [contacts, setContacts] = useState(initialContacts);\r\n  const [filter, setFilter] = useState('');\r\n\r\n  useEffect(() => {\r\n    const storedContacts = localStorage.getItem('storedContacts');\r\n    const parsedContacts = JSON.parse(storedContacts);\r\n    console.log(parsedContacts);\r\n\r\n    parsedContacts && setContacts(parsedContacts);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('storedContacts', JSON.stringify(contacts));\r\n  }, [contacts]);\r\n\r\n  const addContact = (name, number) => {\r\n    const isExistName = contacts.some(contact => contact.name === name);\r\n\r\n    if (isExistName) {\r\n      alert(`${name} is already in contacts`);\r\n      return;\r\n    }\r\n\r\n    const newRecord = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n\r\n    setContacts(prev => [newRecord, ...prev]);\r\n  };\r\n\r\n  const getVisibleContacts = filter => {\r\n    const normalizedFilter = filter.toLocaleLowerCase();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLocaleLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  const changeFilter = e => {\r\n    const filterName = e.currentTarget.value;\r\n    setFilter(filterName);\r\n  };\r\n\r\n  const deleteContact = id => {\r\n    setContacts(contacts.filter(contact => contact.id !== id));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Section title=\"Phonebook\">\r\n        <Form onSubmit={addContact}>\r\n          <Filter vlaue={filter} onChange={changeFilter} />\r\n        </Form>\r\n      </Section>\r\n\r\n      <Section title=\"Contacts\">\r\n        <Contacts\r\n          records={getVisibleContacts(filter)}\r\n          onDelete={deleteContact}\r\n        />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3NRiF\",\"button\":\"Form_button__1HV7z\",\"label\":\"Form_label__2NLrI\"};"],"sourceRoot":""}